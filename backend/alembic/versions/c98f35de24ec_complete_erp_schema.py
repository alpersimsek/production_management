"""Complete ERP schema

Revision ID: c98f35de24ec
Revises: 
Create Date: 2025-10-13 21:48:27.828500

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c98f35de24ec'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('customers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('tax_number', sa.String(length=20), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default='true', nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('formulas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('version', sa.String(length=10), nullable=False),
    sa.Column('formula_data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('valid_from', sa.Date(), nullable=False),
    sa.Column('valid_to', sa.Date(), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default='true', nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('audit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('module', sa.String(length=30), nullable=False),
    sa.Column('action', sa.String(length=30), nullable=False),
    sa.Column('old_values', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('new_values', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_audit_logs_user_module', 'audit_logs', ['user_id', 'module'], unique=False)
    op.create_table('defects_waste',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('context_type', sa.String(length=20), nullable=False),
    sa.Column('context_id', sa.Integer(), nullable=False),
    sa.Column('waste_kg', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('waste_percentage', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('reason_code', sa.String(length=20), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('level', sa.Integer(), server_default='1', nullable=True),
    sa.Column('photo_ref', sa.String(length=100), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_defects_waste_context', 'defects_waste', ['context_type', 'context_id'], unique=False)
    op.create_table('weekly_weighings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('department', sa.String(length=50), nullable=True),
    sa.Column('week_start_date', sa.Date(), nullable=False),
    sa.Column('theoretical_data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('actual_data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('calculated_deviations', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('unit_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('total_price', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('delivery_status', sa.String(length=20), server_default='beklemede', nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lot_number', sa.String(length=50), nullable=False),
    sa.Column('production_job_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=20), server_default='olusturuldu', nullable=False),
    sa.Column('shift', sa.String(length=10), nullable=True),
    sa.Column('operator_id', sa.Integer(), nullable=True),
    sa.Column('planned_quantity', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('actual_quantity', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('waste_quantity', sa.Numeric(precision=10, scale=2), server_default='0', nullable=True),
    sa.Column('efficiency_percentage', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('start_time', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('end_time', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['operator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['production_job_id'], ['production_jobs.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('lot_number')
    )
    op.create_index('idx_lots_production_job', 'lots', ['production_job_id'], unique=False)
    op.create_index('idx_lots_status', 'lots', ['status'], unique=False)
    op.create_table('inventory',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('lot_id', sa.Integer(), nullable=True),
    sa.Column('warehouse_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('unit', sa.String(length=10), nullable=False),
    sa.Column('movement_type', sa.String(length=20), nullable=False),
    sa.Column('reference_id', sa.Integer(), nullable=True),
    sa.Column('reference_type', sa.String(length=20), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['lot_id'], ['lots.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_inventory_product_warehouse', 'inventory', ['product_id', 'warehouse_id'], unique=False)
    op.create_table('lot_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lot_id', sa.Integer(), nullable=False),
    sa.Column('event_type', sa.String(length=30), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('photo_ref', sa.String(length=100), nullable=True),
    sa.Column('meta_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['lot_id'], ['lots.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_lot_logs_event_type', 'lot_logs', ['event_type'], unique=False)
    op.create_index('idx_lot_logs_lot', 'lot_logs', ['lot_id'], unique=False)
    op.create_table('packaging',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lot_id', sa.Integer(), nullable=False),
    sa.Column('package_type', sa.String(length=20), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('package_weight', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('waste_kg', sa.Numeric(precision=10, scale=2), server_default='0', nullable=True),
    sa.Column('photo_ref', sa.String(length=100), nullable=True),
    sa.Column('status', sa.String(length=20), server_default='olusturuldu', nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['lot_id'], ['lots.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shipment_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('shipment_id', sa.Integer(), nullable=False),
    sa.Column('package_id', sa.Integer(), nullable=False),
    sa.Column('sequence', sa.Integer(), nullable=True),
    sa.Column('volume_m3', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('weight_kg', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['package_id'], ['packaging.id'], ),
    sa.ForeignKeyConstraint(['shipment_id'], ['shipments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('warehouse_receipts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('package_id', sa.Integer(), nullable=False),
    sa.Column('warehouse_id', sa.Integer(), nullable=False),
    sa.Column('weight_kg', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('receipt_date', sa.Date(), server_default=sa.text('CURRENT_DATE'), nullable=False),
    sa.Column('receipt_time', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('approved_by', sa.Integer(), nullable=False),
    sa.Column('photo_ref', sa.String(length=100), nullable=True),
    sa.Column('status', sa.String(length=20), server_default='kabul_bekliyor', nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['approved_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['package_id'], ['packaging.id'], ),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('attachments', sa.Column('uuid', sa.UUID(), nullable=False))
    op.add_column('attachments', sa.Column('reference_type', sa.String(length=20), nullable=False))
    op.add_column('attachments', sa.Column('reference_id', sa.Integer(), nullable=False))
    op.add_column('attachments', sa.Column('original_filename', sa.String(length=255), nullable=False))
    op.add_column('attachments', sa.Column('schema_version', sa.String(length=10), server_default='1.0', nullable=True))
    op.alter_column('attachments', 'file_path',
               existing_type=sa.TEXT(),
               type_=sa.String(length=255),
               existing_nullable=False)
    op.alter_column('attachments', 'mime_type',
               existing_type=sa.TEXT(),
               type_=sa.String(length=100),
               nullable=False)
    op.alter_column('attachments', 'file_size',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('attachments', 'uploaded_by',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_index('idx_attachments_reference', 'attachments', ['reference_type', 'reference_id'], unique=False)
    op.create_unique_constraint(None, 'attachments', ['uuid'])
    op.drop_column('attachments', 'entity_type')
    op.drop_column('attachments', 'filename')
    op.drop_column('attachments', 'entity_id')
    op.add_column('orders', sa.Column('order_number', sa.String(length=20), nullable=False))
    op.add_column('orders', sa.Column('customer_id', sa.Integer(), nullable=False))
    op.add_column('orders', sa.Column('salesperson_id', sa.Integer(), nullable=True))
    op.add_column('orders', sa.Column('discount_amount', sa.Numeric(precision=12, scale=2), server_default='0', nullable=True))
    op.add_column('orders', sa.Column('markup_amount', sa.Numeric(precision=12, scale=2), server_default='0', nullable=True))
    op.add_column('orders', sa.Column('fuel_cost', sa.Numeric(precision=10, scale=2), server_default='0', nullable=True))
    op.add_column('orders', sa.Column('profitability', sa.Numeric(precision=10, scale=2), nullable=True))
    op.add_column('orders', sa.Column('created_by', sa.Integer(), nullable=False))
    op.add_column('orders', sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.alter_column('orders', 'status',
               existing_type=sa.TEXT(),
               type_=sa.String(length=20),
               existing_nullable=False,
               existing_server_default=sa.text("'pending'::text"))
    op.alter_column('orders', 'total_amount',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               type_=sa.Numeric(precision=12, scale=2),
               existing_nullable=True)
    op.create_index('idx_orders_customer', 'orders', ['customer_id'], unique=False)
    op.create_index('idx_orders_due_date', 'orders', ['due_date'], unique=False)
    op.create_index('idx_orders_status', 'orders', ['status'], unique=False)
    op.create_unique_constraint(None, 'orders', ['order_number'])
    op.create_foreign_key(None, 'orders', 'customers', ['customer_id'], ['id'])
    op.create_foreign_key(None, 'orders', 'users', ['created_by'], ['id'])
    op.create_foreign_key(None, 'orders', 'users', ['salesperson_id'], ['id'])
    op.drop_column('orders', 'customer_name')
    op.drop_column('orders', 'customer_email')
    op.add_column('production_jobs', sa.Column('order_item_id', sa.Integer(), nullable=False))
    op.add_column('production_jobs', sa.Column('priority', sa.Integer(), server_default='1', nullable=True))
    op.add_column('production_jobs', sa.Column('assigned_operator_id', sa.Integer(), nullable=True))
    op.add_column('production_jobs', sa.Column('formula_snapshot', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('production_jobs', sa.Column('planned_start_date', sa.Date(), nullable=True))
    op.add_column('production_jobs', sa.Column('planned_end_date', sa.Date(), nullable=True))
    op.add_column('production_jobs', sa.Column('actual_start_date', sa.Date(), nullable=True))
    op.add_column('production_jobs', sa.Column('actual_end_date', sa.Date(), nullable=True))
    op.add_column('production_jobs', sa.Column('created_by', sa.Integer(), nullable=False))
    op.add_column('production_jobs', sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.alter_column('production_jobs', 'status',
               existing_type=sa.TEXT(),
               type_=sa.String(length=20),
               existing_nullable=False,
               existing_server_default=sa.text("'pending'::text"))
    op.create_index('idx_production_jobs_operator', 'production_jobs', ['assigned_operator_id'], unique=False)
    op.create_index('idx_production_jobs_status', 'production_jobs', ['status'], unique=False)
    op.drop_constraint('production_jobs_order_id_fkey', 'production_jobs', type_='foreignkey')
    op.drop_constraint('production_jobs_product_id_fkey', 'production_jobs', type_='foreignkey')
    op.create_foreign_key(None, 'production_jobs', 'users', ['assigned_operator_id'], ['id'])
    op.create_foreign_key(None, 'production_jobs', 'users', ['created_by'], ['id'])
    op.create_foreign_key(None, 'production_jobs', 'order_items', ['order_item_id'], ['id'])
    op.drop_column('production_jobs', 'quantity')
    op.drop_column('production_jobs', 'end_date')
    op.drop_column('production_jobs', 'order_id')
    op.drop_column('production_jobs', 'start_date')
    op.drop_column('production_jobs', 'product_id')
    op.add_column('products', sa.Column('product_type', sa.String(length=20), nullable=False))
    op.add_column('products', sa.Column('unit', sa.String(length=10), nullable=False))
    op.add_column('products', sa.Column('efficiency', sa.Numeric(precision=5, scale=2), nullable=True))
    op.add_column('products', sa.Column('label_template', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.alter_column('products', 'name',
               existing_type=sa.TEXT(),
               type_=sa.String(length=100),
               existing_nullable=False)
    op.alter_column('products', 'code',
               existing_type=sa.TEXT(),
               type_=sa.String(length=20),
               existing_nullable=False)
    op.drop_column('products', 'unit_price')
    op.drop_column('products', 'description')
    op.add_column('roles', sa.Column('description', sa.Text(), nullable=True))
    op.add_column('roles', sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.alter_column('roles', 'name',
               existing_type=sa.TEXT(),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.add_column('settings', sa.Column('description', sa.Text(), nullable=True))
    op.add_column('settings', sa.Column('updated_by', sa.Integer(), nullable=False))
    op.add_column('settings', sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.alter_column('settings', 'key',
               existing_type=sa.TEXT(),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.create_foreign_key(None, 'settings', 'users', ['updated_by'], ['id'])
    op.add_column('shipments', sa.Column('shipment_number', sa.String(length=20), nullable=False))
    op.add_column('shipments', sa.Column('planned_date', sa.Date(), nullable=False))
    op.add_column('shipments', sa.Column('vehicle_capacity_m3', sa.Numeric(precision=10, scale=2), nullable=True))
    op.add_column('shipments', sa.Column('route_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('shipments', sa.Column('driver_name', sa.String(length=100), nullable=True))
    op.add_column('shipments', sa.Column('driver_phone', sa.String(length=20), nullable=True))
    op.add_column('shipments', sa.Column('vehicle_plate', sa.String(length=20), nullable=True))
    op.add_column('shipments', sa.Column('created_by', sa.Integer(), nullable=False))
    op.add_column('shipments', sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.alter_column('shipments', 'status',
               existing_type=sa.TEXT(),
               type_=sa.String(length=20),
               existing_nullable=False,
               existing_server_default=sa.text("'pending'::text"))
    op.create_unique_constraint(None, 'shipments', ['shipment_number'])
    op.drop_constraint('shipments_order_id_fkey', 'shipments', type_='foreignkey')
    op.create_foreign_key(None, 'shipments', 'users', ['created_by'], ['id'])
    op.drop_column('shipments', 'tracking_number')
    op.drop_column('shipments', 'estimated_delivery')
    op.drop_column('shipments', 'shipped_date')
    op.drop_column('shipments', 'order_id')
    op.drop_column('shipments', 'carrier')
    op.add_column('users', sa.Column('phone', sa.String(length=20), nullable=True))
    op.add_column('users', sa.Column('department', sa.String(length=50), nullable=True))
    op.add_column('users', sa.Column('last_login', sa.TIMESTAMP(timezone=True), nullable=True))
    op.alter_column('users', 'full_name',
               existing_type=sa.TEXT(),
               type_=sa.String(length=100),
               existing_nullable=False)
    op.alter_column('users', 'email',
               existing_type=sa.TEXT(),
               type_=sa.String(length=100),
               existing_nullable=False)
    op.alter_column('users', 'password_hash',
               existing_type=sa.TEXT(),
               type_=sa.String(length=255),
               existing_nullable=False)
    op.add_column('warehouses', sa.Column('capacity_m3', sa.Numeric(precision=10, scale=2), nullable=True))
    op.alter_column('warehouses', 'code',
               existing_type=sa.TEXT(),
               type_=sa.String(length=10),
               existing_nullable=False)
    op.alter_column('warehouses', 'name',
               existing_type=sa.TEXT(),
               type_=sa.String(length=100),
               existing_nullable=False)
    op.alter_column('warehouses', 'location',
               existing_type=sa.TEXT(),
               type_=sa.String(length=100),
               existing_nullable=True)
    op.drop_column('warehouses', 'capacity')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('warehouses', sa.Column('capacity', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True))
    op.alter_column('warehouses', 'location',
               existing_type=sa.String(length=100),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('warehouses', 'name',
               existing_type=sa.String(length=100),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('warehouses', 'code',
               existing_type=sa.String(length=10),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.drop_column('warehouses', 'capacity_m3')
    op.alter_column('users', 'password_hash',
               existing_type=sa.String(length=255),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('users', 'email',
               existing_type=sa.String(length=100),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('users', 'full_name',
               existing_type=sa.String(length=100),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.drop_column('users', 'last_login')
    op.drop_column('users', 'department')
    op.drop_column('users', 'phone')
    op.add_column('shipments', sa.Column('carrier', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('shipments', sa.Column('order_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('shipments', sa.Column('shipped_date', sa.DATE(), autoincrement=False, nullable=True))
    op.add_column('shipments', sa.Column('estimated_delivery', sa.DATE(), autoincrement=False, nullable=True))
    op.add_column('shipments', sa.Column('tracking_number', sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'shipments', type_='foreignkey')
    op.create_foreign_key('shipments_order_id_fkey', 'shipments', 'orders', ['order_id'], ['id'])
    op.drop_constraint(None, 'shipments', type_='unique')
    op.alter_column('shipments', 'status',
               existing_type=sa.String(length=20),
               type_=sa.TEXT(),
               existing_nullable=False,
               existing_server_default=sa.text("'pending'::text"))
    op.drop_column('shipments', 'updated_at')
    op.drop_column('shipments', 'created_by')
    op.drop_column('shipments', 'vehicle_plate')
    op.drop_column('shipments', 'driver_phone')
    op.drop_column('shipments', 'driver_name')
    op.drop_column('shipments', 'route_data')
    op.drop_column('shipments', 'vehicle_capacity_m3')
    op.drop_column('shipments', 'planned_date')
    op.drop_column('shipments', 'shipment_number')
    op.drop_constraint(None, 'settings', type_='foreignkey')
    op.alter_column('settings', 'key',
               existing_type=sa.String(length=50),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.drop_column('settings', 'updated_at')
    op.drop_column('settings', 'updated_by')
    op.drop_column('settings', 'description')
    op.alter_column('roles', 'name',
               existing_type=sa.String(length=50),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.drop_column('roles', 'created_at')
    op.drop_column('roles', 'description')
    op.add_column('products', sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('unit_price', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True))
    op.alter_column('products', 'code',
               existing_type=sa.String(length=20),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('products', 'name',
               existing_type=sa.String(length=100),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.drop_column('products', 'label_template')
    op.drop_column('products', 'efficiency')
    op.drop_column('products', 'unit')
    op.drop_column('products', 'product_type')
    op.add_column('production_jobs', sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('production_jobs', sa.Column('start_date', sa.DATE(), autoincrement=False, nullable=True))
    op.add_column('production_jobs', sa.Column('order_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('production_jobs', sa.Column('end_date', sa.DATE(), autoincrement=False, nullable=True))
    op.add_column('production_jobs', sa.Column('quantity', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'production_jobs', type_='foreignkey')
    op.drop_constraint(None, 'production_jobs', type_='foreignkey')
    op.drop_constraint(None, 'production_jobs', type_='foreignkey')
    op.create_foreign_key('production_jobs_product_id_fkey', 'production_jobs', 'products', ['product_id'], ['id'])
    op.create_foreign_key('production_jobs_order_id_fkey', 'production_jobs', 'orders', ['order_id'], ['id'])
    op.drop_index('idx_production_jobs_status', table_name='production_jobs')
    op.drop_index('idx_production_jobs_operator', table_name='production_jobs')
    op.alter_column('production_jobs', 'status',
               existing_type=sa.String(length=20),
               type_=sa.TEXT(),
               existing_nullable=False,
               existing_server_default=sa.text("'pending'::text"))
    op.drop_column('production_jobs', 'updated_at')
    op.drop_column('production_jobs', 'created_by')
    op.drop_column('production_jobs', 'actual_end_date')
    op.drop_column('production_jobs', 'actual_start_date')
    op.drop_column('production_jobs', 'planned_end_date')
    op.drop_column('production_jobs', 'planned_start_date')
    op.drop_column('production_jobs', 'formula_snapshot')
    op.drop_column('production_jobs', 'assigned_operator_id')
    op.drop_column('production_jobs', 'priority')
    op.drop_column('production_jobs', 'order_item_id')
    op.add_column('orders', sa.Column('customer_email', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('orders', sa.Column('customer_name', sa.TEXT(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'orders', type_='foreignkey')
    op.drop_constraint(None, 'orders', type_='foreignkey')
    op.drop_constraint(None, 'orders', type_='foreignkey')
    op.drop_constraint(None, 'orders', type_='unique')
    op.drop_index('idx_orders_status', table_name='orders')
    op.drop_index('idx_orders_due_date', table_name='orders')
    op.drop_index('idx_orders_customer', table_name='orders')
    op.alter_column('orders', 'total_amount',
               existing_type=sa.Numeric(precision=12, scale=2),
               type_=sa.NUMERIC(precision=10, scale=2),
               existing_nullable=True)
    op.alter_column('orders', 'status',
               existing_type=sa.String(length=20),
               type_=sa.TEXT(),
               existing_nullable=False,
               existing_server_default=sa.text("'pending'::text"))
    op.drop_column('orders', 'updated_at')
    op.drop_column('orders', 'created_by')
    op.drop_column('orders', 'profitability')
    op.drop_column('orders', 'fuel_cost')
    op.drop_column('orders', 'markup_amount')
    op.drop_column('orders', 'discount_amount')
    op.drop_column('orders', 'salesperson_id')
    op.drop_column('orders', 'customer_id')
    op.drop_column('orders', 'order_number')
    op.add_column('attachments', sa.Column('entity_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('attachments', sa.Column('filename', sa.TEXT(), autoincrement=False, nullable=False))
    op.add_column('attachments', sa.Column('entity_type', sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'attachments', type_='unique')
    op.drop_index('idx_attachments_reference', table_name='attachments')
    op.alter_column('attachments', 'uploaded_by',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('attachments', 'file_size',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('attachments', 'mime_type',
               existing_type=sa.String(length=100),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('attachments', 'file_path',
               existing_type=sa.String(length=255),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.drop_column('attachments', 'schema_version')
    op.drop_column('attachments', 'original_filename')
    op.drop_column('attachments', 'reference_id')
    op.drop_column('attachments', 'reference_type')
    op.drop_column('attachments', 'uuid')
    op.drop_table('warehouse_receipts')
    op.drop_table('shipment_items')
    op.drop_table('packaging')
    op.drop_index('idx_lot_logs_lot', table_name='lot_logs')
    op.drop_index('idx_lot_logs_event_type', table_name='lot_logs')
    op.drop_table('lot_logs')
    op.drop_index('idx_inventory_product_warehouse', table_name='inventory')
    op.drop_table('inventory')
    op.drop_index('idx_lots_status', table_name='lots')
    op.drop_index('idx_lots_production_job', table_name='lots')
    op.drop_table('lots')
    op.drop_table('order_items')
    op.drop_table('weekly_weighings')
    op.drop_index('idx_defects_waste_context', table_name='defects_waste')
    op.drop_table('defects_waste')
    op.drop_index('idx_audit_logs_user_module', table_name='audit_logs')
    op.drop_table('audit_logs')
    op.drop_table('formulas')
    op.drop_table('customers')
    # ### end Alembic commands ###
