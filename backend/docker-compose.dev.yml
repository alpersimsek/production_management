services:
  backend:
    container_name: backend
    build: .
    command: sleep infinity
    ports:
      - 8000:8000
    environment:
      - DATA_DIR=/data
      - CELERY_BROKER=${CELERY_BROKER_URL}
      - DB_USERNAME=postgres
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_HOST=db
      - DB_NAME=gdpr
    volumes:
      - data:/data
    depends_on:
      - mq
      - db
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
    networks:
      - gdpr-network

  db:
    container_name: db
    image: postgres:17
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=gdpr
    ports:
      - 5432:5432
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - gdpr-network

  celery:
    container_name: celery
    build: .
    volumes:
      - data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DATA_DIR=/data
      - CELERY_BROKER=${CELERY_BROKER_URL}
      - DB_USERNAME=postgres
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_HOST=db
      - DB_NAME=gdpr
    depends_on:
      - mq
      - db
    command: bash -c 'while !</dev/tcp/backend/8000; do sleep 1; done; celery -A tasks worker --loglevel=info --autoscale=4,1'
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
    networks:
      - gdpr-network

  mq:
    container_name: rabbitMQ
    image: rabbitmq:alpine
    ports:
      - 5672:5672
    networks:
      - gdpr-network

  flower:
    container_name: flower
    image: mher/flower:2.0
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
    ports:
      - 5555:5555
    volumes:
      - ./app/flower/flowerconfig.py:/tmp/flowerconfig.py:ro
    depends_on:
      - mq
    command: sh -c 'celery flower --conf=/tmp/flowerconfig.py'
    networks:
      - gdpr-network

networks:
  gdpr-network:
    external: true

volumes:
  data:
  pg_data:
